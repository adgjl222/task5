<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                         http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.2.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">



    <!-- 扫描web相关的bean -->
    <context:component-scan base-package="com.tian"/>


    <!-- 开启SpringMVC注解模式 -->
    <!--<mvc:annotation-driven>会自动注册RequestMappingHandlerMapping与RequestMappingHandlerAdapter两个Bean,
这是Spring MVC为@Controller分发请求所必需的，并且提供了数据绑定支持，@NumberFormatannotation支持，@DateTimeFormat支持,
@Valid支持读写XML的支持（JAXB）和读写JSON的支持（默认Jackson）等功能。-->
    <!--使用该注解后的springmvc-config.xml:-->
    <!--  spring 可以自动去扫描 base-package下面的包或子包下面的Java文件，如果扫描到有Spring的相关
    注解的类，则把这些类注册为Spring的bean -->

    <!--静态资源访问 -->
    <mvc:default-servlet-handler/>



    <!-- 静态资源默认servlet配置 -->
    <!-- 配置注解驱动 可以将request参数与绑定到controller参数上 -->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="text/plain;charset=UTF-8"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 配置拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 拦截后台页面请求 -->
            <mvc:mapping path="/user/stu" />

            <bean class="com.tian.interceptor.LoginInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>


    <!--配置视图解析器:如何把handle方法返回值解析为实际的物理视图-->
    <!--视图解析器-->
    <!-- 配置jsp 显示ViewResolver -->

    <!-- tiles解析器 -->
    <bean class="org.springframework.web.servlet.view.tiles3.TilesViewResolver"/>

    <!-- tiles配置路径 -->
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/layout/tiles.xml</value>
            </list>
        </property>
    </bean>

    <!--需要文件上传功能时，启用以下配置 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设定默认编码 -->
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="maxInMemorySize">
            <value>1638400</value>
        </property>
    </bean>

   <!-- 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>-->
        <!--前缀-->
        <property name="prefix" value="/WEB-INF/views/"/>
        <!--后缀-->
        <property name="suffix" value=".jsp"/>
    </bean>


</beans>